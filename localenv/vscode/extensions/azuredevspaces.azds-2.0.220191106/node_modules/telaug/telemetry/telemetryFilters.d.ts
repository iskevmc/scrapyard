import { ITelemetryFilter } from '../types/ITelemetryFilter';
export declare class SendOnceFilter implements ITelemetryFilter {
    private readonly eventName;
    private readonly distinctProperties;
    private sentEventsProperties;
    constructor(eventName: string, distinctProperties?: string[]);
    shouldSend(eventName: string, properties?: {
        [key: string]: string;
    }, measures?: {
        [key: string]: number;
    }): boolean;
    reset(): void;
    private createPropertySubset;
    private propertySubsetsEqual;
}
export declare class LogFilter implements ITelemetryFilter {
    private readonly log;
    constructor(log: (l: string) => void);
    shouldSend(eventName: string, properties?: {
        [key: string]: string;
    }, measures?: {
        [key: string]: number;
    }): boolean;
}
