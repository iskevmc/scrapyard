import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ContainerServiceClientContext } from "../containerServiceClientContext";
/** Class representing a ContainerServices. */
export declare class ContainerServices {
    private readonly client;
    /**
     * Create a ContainerServices.
     * @param {ContainerServiceClientContext} client Reference to the service client.
     */
    constructor(client: ContainerServiceClientContext);
    /**
     * Gets a list of container services in the specified subscription. The operation returns
     * properties of each container service including state, orchestrator, number of masters and
     * agents, and FQDNs of masters and agents.
     * @summary Gets a list of container services in the specified subscription.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.ContainerServicesListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.ContainerServicesListResponse>;
    /**
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    list(callback: msRest.ServiceCallback<Models.ContainerServiceListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerServiceListResult>): void;
    /**
     * Creates or updates a container service with the specified configuration of orchestrator,
     * masters, and agents.
     * @summary Creates or updates a container service.
     * @param resourceGroupName The name of the resource group.
     * @param containerServiceName The name of the container service in the specified subscription and
     * resource group.
     * @param parameters Parameters supplied to the Create or Update a Container Service operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ContainerServicesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, containerServiceName: string, parameters: Models.ContainerService, options?: msRest.RequestOptionsBase): Promise<Models.ContainerServicesCreateOrUpdateResponse>;
    /**
     * Gets the properties of the specified container service in the specified subscription and
     * resource group. The operation returns the properties including state, orchestrator, number of
     * masters and agents, and FQDNs of masters and agents.
     * @summary Gets the properties of the specified container service.
     * @param resourceGroupName The name of the resource group.
     * @param containerServiceName The name of the container service in the specified subscription and
     * resource group.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.ContainerServicesGetResponse>
     */
    get(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerServicesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param containerServiceName The name of the container service in the specified subscription and
     * resource group.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    get(resourceGroupName: string, containerServiceName: string, callback: msRest.ServiceCallback<Models.ContainerService>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param containerServiceName The name of the container service in the specified subscription and
     * resource group.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    get(resourceGroupName: string, containerServiceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerService>): void;
    /**
     * Deletes the specified container service in the specified subscription and resource group. The
     * operation does not delete other resources created as part of creating a container service,
     * including storage accounts, VMs, and availability sets. All the other resources created with the
     * container service are part of the same resource group and can be deleted individually.
     * @summary Deletes the specified container service.
     * @param resourceGroupName The name of the resource group.
     * @param containerServiceName The name of the container service in the specified subscription and
     * resource group.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Gets a list of container services in the specified subscription and resource group. The
     * operation returns properties of each container service including state, orchestrator, number of
     * masters and agents, and FQDNs of masters and agents.
     * @summary Gets a list of container services in the specified resource group.
     * @param resourceGroupName The name of the resource group.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.ContainerServicesListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerServicesListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ContainerServiceListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerServiceListResult>): void;
    /**
     * Gets a list of supported orchestrators in the specified subscription. The operation returns
     * properties of each orchestrator including version and available upgrades.
     * @summary Gets a list of supported orchestrators in the specified subscription.
     * @param location The name of a supported Azure region.
     * @param [options] The optional parameters
     * @returns Promise<Models.ContainerServicesListOrchestratorsResponse>
     */
    listOrchestrators(location: string, options?: Models.ContainerServicesListOrchestratorsOptionalParams): Promise<Models.ContainerServicesListOrchestratorsResponse>;
    /**
     * @param location The name of a supported Azure region.
     * @param callback The callback
     */
    listOrchestrators(location: string, callback: msRest.ServiceCallback<Models.OrchestratorVersionProfileListResult>): void;
    /**
     * @param location The name of a supported Azure region.
     * @param options The optional parameters
     * @param callback The callback
     */
    listOrchestrators(location: string, options: Models.ContainerServicesListOrchestratorsOptionalParams, callback: msRest.ServiceCallback<Models.OrchestratorVersionProfileListResult>): void;
    /**
     * Creates or updates a container service with the specified configuration of orchestrator,
     * masters, and agents.
     * @summary Creates or updates a container service.
     * @param resourceGroupName The name of the resource group.
     * @param containerServiceName The name of the container service in the specified subscription and
     * resource group.
     * @param parameters Parameters supplied to the Create or Update a Container Service operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, containerServiceName: string, parameters: Models.ContainerService, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes the specified container service in the specified subscription and resource group. The
     * operation does not delete other resources created as part of creating a container service,
     * including storage accounts, VMs, and availability sets. All the other resources created with the
     * container service are part of the same resource group and can be deleted individually.
     * @summary Deletes the specified container service.
     * @param resourceGroupName The name of the resource group.
     * @param containerServiceName The name of the container service in the specified subscription and
     * resource group.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, containerServiceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets a list of container services in the specified subscription. The operation returns
     * properties of each container service including state, orchestrator, number of masters and
     * agents, and FQDNs of masters and agents.
     * @summary Gets a list of container services in the specified subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.ContainerServicesListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerServicesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ContainerServiceListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerServiceListResult>): void;
    /**
     * Gets a list of container services in the specified subscription and resource group. The
     * operation returns properties of each container service including state, orchestrator, number of
     * masters and agents, and FQDNs of masters and agents.
     * @summary Gets a list of container services in the specified resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @deprecated This operation is deprecated. Please do not use it any longer.
     * @returns Promise<Models.ContainerServicesListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ContainerServicesListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ContainerServiceListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     * @deprecated This operation is deprecated. Please do not use it any longer.
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ContainerServiceListResult>): void;
}
//# sourceMappingURL=containerServices.d.ts.map