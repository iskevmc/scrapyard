import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ContainerServiceClientContext } from "../containerServiceClientContext";
/** Class representing a AgentPools. */
export declare class AgentPools {
    private readonly client;
    /**
     * Create a AgentPools.
     * @param {ContainerServiceClientContext} client Reference to the service client.
     */
    constructor(client: ContainerServiceClientContext);
    /**
     * Gets a list of agent pools in the specified managed cluster. The operation returns properties of
     * each agent pool.
     * @summary Gets a list of agent pools in the specified managed cluster.
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.AgentPoolsListResponse>
     */
    list(resourceGroupName: string, managedClusterName: string, options?: msRest.RequestOptionsBase): Promise<Models.AgentPoolsListResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param callback The callback
     */
    list(resourceGroupName: string, managedClusterName: string, callback: msRest.ServiceCallback<Models.AgentPoolListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, managedClusterName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AgentPoolListResult>): void;
    /**
     * Gets the details of the agent pool by managed cluster and resource group.
     * @summary Gets the agent pool.
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param [options] The optional parameters
     * @returns Promise<Models.AgentPoolsGetResponse>
     */
    get(resourceGroupName: string, managedClusterName: string, agentPoolName: string, options?: msRest.RequestOptionsBase): Promise<Models.AgentPoolsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param callback The callback
     */
    get(resourceGroupName: string, managedClusterName: string, agentPoolName: string, callback: msRest.ServiceCallback<Models.AgentPool>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, managedClusterName: string, agentPoolName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AgentPool>): void;
    /**
     * Creates or updates an agent pool in the specified managed cluster.
     * @summary Creates or updates an agent pool.
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param parameters Parameters supplied to the Create or Update an agent pool operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AgentPoolsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, managedClusterName: string, agentPoolName: string, parameters: Models.AgentPool, options?: msRest.RequestOptionsBase): Promise<Models.AgentPoolsCreateOrUpdateResponse>;
    /**
     * Deletes the agent pool in the specified managed cluster.
     * @summary Deletes an agent pool.
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, managedClusterName: string, agentPoolName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Creates or updates an agent pool in the specified managed cluster.
     * @summary Creates or updates an agent pool.
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param parameters Parameters supplied to the Create or Update an agent pool operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, managedClusterName: string, agentPoolName: string, parameters: Models.AgentPool, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes the agent pool in the specified managed cluster.
     * @summary Deletes an agent pool.
     * @param resourceGroupName The name of the resource group.
     * @param managedClusterName The name of the managed cluster resource.
     * @param agentPoolName The name of the agent pool.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, managedClusterName: string, agentPoolName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets a list of agent pools in the specified managed cluster. The operation returns properties of
     * each agent pool.
     * @summary Gets a list of agent pools in the specified managed cluster.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.AgentPoolsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.AgentPoolsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.AgentPoolListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AgentPoolListResult>): void;
}
//# sourceMappingURL=agentPools.d.ts.map