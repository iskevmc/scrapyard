import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { ContainerServiceClientContext } from "../containerServiceClientContext";
/** Class representing a OpenShiftManagedClusters. */
export declare class OpenShiftManagedClusters {
    private readonly client;
    /**
     * Create a OpenShiftManagedClusters.
     * @param {ContainerServiceClientContext} client Reference to the service client.
     */
    constructor(client: ContainerServiceClientContext);
    /**
     * Gets a list of OpenShift managed clusters in the specified subscription. The operation returns
     * properties of each OpenShift managed cluster.
     * @summary Gets a list of OpenShift managed clusters in the specified subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.OpenShiftManagedClustersListResponse>
     */
    list(options?: msRest.RequestOptionsBase): Promise<Models.OpenShiftManagedClustersListResponse>;
    /**
     * @param callback The callback
     */
    list(callback: msRest.ServiceCallback<Models.OpenShiftManagedClusterListResult>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OpenShiftManagedClusterListResult>): void;
    /**
     * Lists OpenShift managed clusters in the specified subscription and resource group. The operation
     * returns properties of each OpenShift managed cluster.
     * @summary Lists OpenShift managed clusters in the specified subscription and resource group.
     * @param resourceGroupName The name of the resource group.
     * @param [options] The optional parameters
     * @returns Promise<Models.OpenShiftManagedClustersListByResourceGroupResponse>
     */
    listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.OpenShiftManagedClustersListByResourceGroupResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.OpenShiftManagedClusterListResult>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OpenShiftManagedClusterListResult>): void;
    /**
     * Gets the details of the managed OpenShift cluster with a specified resource group and name.
     * @summary Gets a OpenShift managed cluster.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.OpenShiftManagedClustersGetResponse>
     */
    get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.OpenShiftManagedClustersGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.OpenShiftManagedCluster>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OpenShiftManagedCluster>): void;
    /**
     * Creates or updates a OpenShift managed cluster with the specified configuration for agents and
     * OpenShift version.
     * @summary Creates or updates an OpenShift managed cluster.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param parameters Parameters supplied to the Create or Update an OpenShift Managed Cluster
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.OpenShiftManagedClustersCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, parameters: Models.OpenShiftManagedCluster, options?: msRest.RequestOptionsBase): Promise<Models.OpenShiftManagedClustersCreateOrUpdateResponse>;
    /**
     * Updates an OpenShift managed cluster with the specified tags.
     * @summary Updates tags on an OpenShift managed cluster.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param parameters Parameters supplied to the Update OpenShift Managed Cluster Tags operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.OpenShiftManagedClustersUpdateTagsResponse>
     */
    updateTags(resourceGroupName: string, resourceName: string, parameters: Models.TagsObject, options?: msRest.RequestOptionsBase): Promise<Models.OpenShiftManagedClustersUpdateTagsResponse>;
    /**
     * Deletes the OpenShift managed cluster with a specified resource group and name.
     * @summary Deletes an OpenShift managed cluster.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Creates or updates a OpenShift managed cluster with the specified configuration for agents and
     * OpenShift version.
     * @summary Creates or updates an OpenShift managed cluster.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param parameters Parameters supplied to the Create or Update an OpenShift Managed Cluster
     * operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, parameters: Models.OpenShiftManagedCluster, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Updates an OpenShift managed cluster with the specified tags.
     * @summary Updates tags on an OpenShift managed cluster.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param parameters Parameters supplied to the Update OpenShift Managed Cluster Tags operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdateTags(resourceGroupName: string, resourceName: string, parameters: Models.TagsObject, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes the OpenShift managed cluster with a specified resource group and name.
     * @summary Deletes an OpenShift managed cluster.
     * @param resourceGroupName The name of the resource group.
     * @param resourceName The name of the OpenShift managed cluster resource.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Gets a list of OpenShift managed clusters in the specified subscription. The operation returns
     * properties of each OpenShift managed cluster.
     * @summary Gets a list of OpenShift managed clusters in the specified subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.OpenShiftManagedClustersListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OpenShiftManagedClustersListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OpenShiftManagedClusterListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OpenShiftManagedClusterListResult>): void;
    /**
     * Lists OpenShift managed clusters in the specified subscription and resource group. The operation
     * returns properties of each OpenShift managed cluster.
     * @summary Lists OpenShift managed clusters in the specified subscription and resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.OpenShiftManagedClustersListByResourceGroupNextResponse>
     */
    listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OpenShiftManagedClustersListByResourceGroupNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OpenShiftManagedClusterListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OpenShiftManagedClusterListResult>): void;
}
//# sourceMappingURL=openShiftManagedClusters.d.ts.map